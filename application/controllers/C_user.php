<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class C_user extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
        $this->load->model('M_user');
        $this->load->model('M_notifpengajuan');
        $this->load->model('M_pengajuanperbaikan');
        $this->load->helper(array('form','url'));
        $this->load->library('form_validation');
        $this->load->library('session');
    }

    public function ceksession()
    {
        if ($this->session->userdata('username')) {
            redirect('C_User');
        } else {
            redirect('C_User');
        }
    }

    public function index()
    {
        if ($this->session->userdata('username')) {
            redirect('C_pengajuanperbaikan/dashboard');
        } else {
            $data['_view'] = 'user/login';
            $this->load->view('layouts/login', $data);
        }
    }

    public function addpengajuan()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'id_unitKerja' => $this->input->post('id_unitKerja'),
                'id_status' => 1,
                'id_user' => $this->input->post('id_user'),
                'permasalahan' => $this->input->post('permasalahan'),
                'waktu' => $this->input->post('waktu')
            );
            $pengajuanperbaikan_id = $this->M_pengajuanperbaikan->add_pengajuanperbaikan($params);
                    
            $params2[]= array(
                'id_pengajuan' => $pengajuanperbaikan_id,
                'id_user' => 1,
                'StatusNotif' => 'No'
            );
            
            $notifpengajuan_id = $this->M_notifpengajuan->add_notifpengajuan($params2);
            $this->session->set_flashdata('msg-insert', 'berhasil');
            redirect('C_user/beranda');
        } else {
            $data['all_unitkerja'] = $this->M_pengajuanperbaikan->get_all_unitkerja();            
            $this->load->view('pengajuan/addbyUnitK', $data);
        }
    }

    /*
     * Login
     */
    public function login()
    {
        // $this->form_validation->set_rules('username', 'Username', 'trim|required|xss_clean');
        // $this->form_validation->set_rules('password', 'Password', 'trim|required|xss_clean');
        // if ($this->form_validation->run() == false) {
        //     // if ($this->session->userdata('username')) {
        //     //     redirect('C_User');
        //     // } else {
        //     //     $data['_view'] = 'user/login';
        //     //     $this->load->view('layouts/main', $data);
        //     // }

        if (isset($_POST) && count($_POST) > 0) {
            $data = array(
              'USERNAME' => $this->input->post('username'),
              'PASSWORD' => $this->input->post('password')
              );
            $result = $this->M_user->Login($data);

            if ($result == true) {
                $username = $this->input->post('username');
                $result = $this->M_user->read_user_information($username);

                if ($result != false) {
                    // var_dump($result);
                    $session_data = array(
                      'username' => $result[0]->username,
                      'id_user' => $result[0]->id_user,
                      'tipe_user' => $result[0]->tipe_user
                      );

                    // Add user data in session
                    $this->session->set_userdata($session_data);
                    redirect('C_pengajuanperbaikan/dashboard');
                }
            } else {
                if ($result == false) {
                    $this->session->set_flashdata('err-insert', 'gagal');
                }
                $data['_view'] = 'user/login';
                $this->load->view('layouts/login', $data);
            }
        }
    }

    /*
     * Adding a new user
     */
    public function add()
    {
        // $this->ceksession();
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'tipe_user' => $this->input->post('tipe_user'),
                'Bidang' => $this->input->post('Bidang'),
                'password' => $this->input->post('password'),
                'username' => $this->input->post('username'),
                'Nip' => $this->input->post('Nip'),
            );

            $user_id = $this->M_user->add_user($params);
            $this->session->set_flashdata('msg-insert', 'berhasil');
            redirect('c_user/index');
        } else {
            $this->load->view('layouts/register');
        }
    }

    /*
     * Editing a user
     */
    public function edit($id_user)
    {
        $this->ceksession();
        // check if the user exists before trying to edit it
        $data['user'] = $this->M_user->get_user($id_user);

        if (isset($data['user']['id_user'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'tipe_user' => $this->input->post('tipe_user'),
                    'Bidang' => $this->input->post('Bidang'),
                    'password' => $this->input->post('password'),
                    'username' => $this->input->post('username'),
                    'Nip' => $this->input->post('Nip'),
                );

                $this->M_user->update_user($id_user, $params);
                $this->session->set_flashdata('msg-update', 'berhasil');
                redirect('c_user/index');
            } else {
                $data['_view'] = 'user/edit';
                $this->load->view('layouts/main', $data);
            }
        } else {
            show_error('The user you are trying to edit does not exist.');
        }
    }

    /*
     * Deleting user
     */
    public function remove($id_user)
    {
        $user = $this->M_user->get_user($id_user);

        // check if the user exists before trying to delete it
        if (isset($user['id_user'])) {
            $this->M_user->delete_user($id_user);
            $this->session->set_flashdata('msg-del', 'berhasil');
            redirect('c_user/index');
        } else {
            show_error('The user you are trying to delete does not exist.');
        }
    }

    public function logout()
    {
        $user_data = $this->session->all_userdata();
        $this->session->unset_userdata($key);
        $this->session->sess_destroy();
        redirect('C_User');
    }

    public function beranda()
    {
        if (isset($_POST) && count($_POST) > 0) {
        } else {
            $this->load->model('M_unitkerja');
            $data['all_unitkerja'] = $this->M_unitkerja->get_all_unitkerja();
            $this->load->view('pencarian/index', $data);
        }
    }

    public function clear_notif()
    {
        $params = array(
            'StatusNotif' => 'Yes',
        );
        $this->M_notifpengajuan->update_notif($params, $this->session->userdata('id_user'));
        echo "success";
    }

    public function v_deleteuser()
    {
        $data["url_del"] = base_url()."C_user/remove/".$this->input->post('id_delete');

        $this->load->view('layouts/delete', $data);
    }

    public function v_success_delete()
    {
        $this->load->view('layouts/successdel');
    }
    public function v_success_update()
    {
        $this->load->view('layouts/successupdate');
    }
}
